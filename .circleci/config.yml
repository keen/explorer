version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.19

commands:
  upload-artifact:
    description: "Assumes role and uploads artifact on S3"
    parameters:
      application_environment:
        type: string
      role_arn:
        type: string
      bucket_name:
        type: string
      cf_dist_id:
        type: string
    steps:
      - run:
          command: |
            response=$(aws sts assume-role --role-arn << parameters.role_arn >> --role-session-name s3-access)
            export AWS_ACCESS_KEY_ID=$(echo $response | jq -r .Credentials.AccessKeyId)
            export AWS_SECRET_ACCESS_KEY=$(echo $response | jq -r .Credentials.SecretAccessKey)
            export AWS_SESSION_TOKEN=$(echo $response | jq -r .Credentials.SessionToken)
            export AWS_SECURITY_TOKEN=$(echo $response | jq -r .Credentials.SessionToken)
            aws s3 sync dist s3://<< parameters.bucket_name >>/explorer_<< parameters.application_environment >> --acl public-read
            aws cloudfront create-invalidation --distribution-id << parameters.cf_dist_id >> --paths "/explorer_<< parameters.application_environment >>/*"
executors:
  nodejs:
    docker:
      - image: cimg/node:12.16

jobs:
  create_version:
    executor: nodejs
    steps:
      - add_ssh_keys:
          fingerprints:
            - "4d:9d:74:f7:49:5c:58:1c:f0:ab:a7:d6:a5:ac:d5:98"
      - run:
          name: Setup GIT email
          command: git config --global user.email "developer@keen.io"
      - run:
          name: Setup GIT user
          command: git config --global user.name "Keen Developer"
      - checkout
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: Create release version
          command: yarn release
      - run:
          name: Push changes
          command: git push --follow-tags --set-upstream origin ${CIRCLE_BRANCH}
  publish:
    executor: nodejs
    working_directory: ~/tmp
    steps:
      - checkout
      - attach_workspace:
          at: ~/tmp/dist
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - run:
          name: Publish
          command: yarn publish
  build:
    executor: nodejs
    working_directory: ~/tmp
    steps:
      - checkout
      - restore_cache:
          key: npm-deps-v1-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: npm-deps-v1-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
      - run:
          name: Lint
          command: yarn lint
      - run:
          name: Unit Tests
          command: yarn test:ci
      - run:
          name: Upload code coverage
          command: npx codecov --token=$CODECOV_TOKEN
      - run:
          name: Build
          command: yarn build
      - persist_to_workspace:
          root: dist
          paths:
            - "*"
  deploy_s3_artifact:
    executor: aws-cli/default
    working_directory: ~/tmp
    parameters:
      bucket_name:
        type: string
        default: keen-test-static
      role_arn:
        type: string
        default: ${ROLE_ARN_STAGE}
      application_environment:
        type: string
        default: test
      cf_dist_id:
        type: string
        default: ${AWS_CF_ID}
    steps:
      - checkout
      - attach_workspace:
          at: ~/tmp/dist
      - aws-cli/install
      - upload-artifact:
          application_environment: << parameters.application_environment >>
          cf_dist_id: ${AWS_CF_ID}
          bucket_name: << parameters.bucket_name >>
          role_arn: << parameters.role_arn >>
  build_s3_artifact:
    executor: nodejs
    parameters:
      application_environment:
        type: string
        default: test
    working_directory: ~/tmp
    steps:
      - checkout
      - restore_cache:
          key: npm-deps-v1-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install
      - run:
          name: Create project config
          command: echo $KEEN_PROJECT_CONFIG > config.js
      - run:
          name: Build
          command: npx webpack --config webpack.config.prod.js --env ENVIRONMENT=<< parameters.application_environment >> --env ORIGIN=${ORIGIN} --mode production
      - persist_to_workspace:
          root: dist
          paths:
            - "*"

workflows:
  version: 2
  deploy_to_environment:
    jobs:
      - approve_deploy_test_environment:
          name: "Approve TEST"
          type: approval
          filters:
            branches:
              only: develop
            tags:
              ignore: /.*/
      - build_s3_artifact:
          name: "Build TEST"
          application_environment: test
          requires:
            - "Approve TEST"
          filters:
            branches:
              only: develop
            tags:
              ignore: /.*/
      - deploy_s3_artifact:
          name: "Deploy TEST"
          application_environment: test
          context: aws
          requires:
            - "Build TEST"
          filters:
            branches:
              only: develop
            tags:
              ignore: /.*/
      - approve_deploy_uat_environment:
          name: "Approve UAT"
          type: approval
          requires:
            - "Deploy TEST"
          descritpion: "Deploys artifact on UAT environment"
          filters:
            branches:
              only: develop
            tags:
              ignore: /.*/
      - build_s3_artifact:
          name: "Build UAT"
          application_environment: uat
          requires:
            - "Approve UAT"
          filters:
            branches:
              only: develop
            tags:
              ignore: /.*/
      - deploy_s3_artifact:
          name: "Deploy UAT"
          application_environment: uat
          context: aws
          requires:
            - "Build UAT"
          filters:
            branches:
              only: develop
            tags:
              ignore: /.*/
  create_version:
    jobs:
      - create_version:
          filters:
            branches:
              only:
                - master
            tags:
              ignore: /.*/
  ci:
    jobs:
      - build:
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /.*/
  publish:
    jobs:
      - build:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - publish:
          filters:
            tags:
              only: /^v\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
          requires:
            - build
